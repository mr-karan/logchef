[sources.generate_apache]
type = "demo_logs"
format = "apache_common"
interval = 0.01

[transforms.remap_apache]
inputs = ["generate_apache"]
type = "remap"
source = '''
  # For Apache Common Log Format, the message is already parsed by Vector
  # into structured fields like host, user, method, path, etc.

  # Timestamp handling - Apache logs have timestamp in a specific format
  .timestamp = format_timestamp!(parse_timestamp!(.timestamp, format: "%d/%b/%Y:%H:%M:%S %z"), format: "%Y-%m-%d %H:%M:%S.%f")

  # Required fields from schema
  .trace_id = uuid_v4()
  .span_id = uuid_v4()
  .trace_flags = 0
  .service_name = "apache"
  .namespace = "apache"
  .body = .message

  # Set severity based on HTTP status code
  .severity_text = if exists(.status) && is_integer(.status) {
    if .status >= 500 {
      "ERROR"
    } else if .status >= 400 {
      "WARN"
    } else {
      "INFO"
    }
  } else {
    "INFO"  # Default to INFO if status is missing or not an integer
  }

  # Convert severity to number
  .severity_number = if .severity_text == "ERROR" {
    17
  } else if .severity_text == "WARN" {
    13
  } else {
    9  # INFO
  }

  # Store apache-specific fields in log_attributes
  .log_attributes = {
    "http.request.method": .method,
    "http.response.status_code": .status,
    "http.request.body.size": .size,
    "url.path": .path,
    "client.address": .host,
    "user.id": .user
  }

  # Cleanup
  del(.message)
  del(.source_type)
  del(.method)
  del(.path)
  del(.protocol)
  del(.host)
  del(.user)
  del(.status)
  del(.size)
'''

# [sinks.clickhouse]
# type = "clickhouse"
# inputs = ["remap_apache"]
# endpoint = "http://localhost:8123"
# database = "logs"
# table = "vector_logs"
# # auth.strategy = "basic"
# # auth.user = "default"
# # auth.password = ""

[sinks.console]
type = "console"
inputs = ["generate_apache"]
encoding.codec = "json"
