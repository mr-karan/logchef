import{c as z,d as Z,g as S,S as se,k as j,u as t,aE as le,y as J,b as K,w as l,r as oe,o as V,O as ie,aF as re,i as a,aG as ne,ae as de,R as r,j as i,m as s,a as q,l as B,aH as ue,aI as me,n as h,_ as A,aJ as ce,t as U,aK as pe,ap as fe,af as ve}from"./index-DhD1Jy6j.js";import{_ as P,a as Y,b as G}from"./CardHeader.vue_vue_type_script_setup_true_lang-B98r7nf9.js";import{_ as _e,a as ge}from"./CardTitle.vue_vue_type_script_setup_true_lang-C7I42q6I.js";import{_ as m,a as y}from"./Label.vue_vue_type_script_setup_true_lang-CYXJfKeA.js";import{_ as ye}from"./Switch.vue_vue_type_script_setup_true_lang-BnTYLmoW.js";import{_ as be}from"./Textarea.vue_vue_type_script_setup_true_lang-D0jxCyCO.js";import{b as xe,_ as Se,a as Ce}from"./CollapsibleTrigger.vue_vue_type_script_setup_true_lang-9BwK9zoW.js";import{T}from"./types-ByjhqKv5.js";import{u as Te}from"./sources-BtojJ080.js";import{_ as M}from"./Separator.vue_vue_type_script_setup_true_lang-jT4VhdSI.js";import{P as Ve}from"./plus-J0EuN1f1.js";import{_ as we}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./monaco-editor-2qzqsP3x.js";import"./base-AlOswPYA.js";import"./teams-B0mpmRSw.js";/**
 * @license lucide-vue-next v0.474.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ee=z("CircleIcon",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}]]);/**
 * @license lucide-vue-next v0.474.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const De=z("CodeIcon",[["polyline",{points:"16 18 22 12 16 6",key:"z7tu5w"}],["polyline",{points:"8 6 2 12 8 18",key:"1eg1df"}]]),Re=Z({__name:"RadioGroup",props:{modelValue:{},defaultValue:{},disabled:{type:Boolean},name:{},required:{type:Boolean},orientation:{},dir:{},loop:{type:Boolean},asChild:{type:Boolean},as:{},class:{}},emits:["update:modelValue"],setup(I,{emit:b}){const c=I,w=b,n=S(()=>{const{class:f,...d}=c;return d}),p=se(n,w);return(f,d)=>(V(),j(t(le),J({class:t(K)("grid gap-2",c.class)},t(p)),{default:l(()=>[oe(f.$slots,"default")]),_:3},16,["class"]))}}),X=Z({__name:"RadioGroupItem",props:{id:{},value:{},disabled:{type:Boolean},required:{type:Boolean},name:{},asChild:{type:Boolean},as:{},class:{}},setup(I){const b=I,c=S(()=>{const{class:n,...p}=b;return p}),w=ie(c);return(n,p)=>(V(),j(t(re),J(t(w),{class:t(K)("aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",b.class)}),{default:l(()=>[a(t(ne),{class:"flex items-center justify-center"},{default:l(()=>[a(t(Ee),{class:"h-2.5 w-2.5 fill-current text-current"})]),_:1})]),_:1},16,["class"]))}}),Oe={class:"space-y-6"},Ie={class:"space-y-4"},Ne={class:"grid gap-2"},ke={class:"grid gap-2"},he={class:"space-y-4"},Ae={class:"grid gap-2"},Ue={class:"grid gap-2"},$e={class:"space-y-4"},Le={class:"flex items-center justify-between"},qe={class:"space-y-0.5"},Be={class:"grid gap-4 md:grid-cols-2 animate-in fade-in slide-in-from-top-2"},Pe={class:"grid gap-2"},Ye={class:"grid gap-2"},Ge={class:"space-y-4"},Ze={class:"flex items-center gap-2"},je={class:"flex items-start gap-4"},Fe={class:"grid gap-2 mt-4 border-t pt-4"},He={class:"flex items-center gap-2"},Me={class:"space-y-2"},Xe={class:"rounded-md bg-muted p-4"},ze={class:"text-sm text-muted-foreground whitespace-pre-wrap"},Je={class:"flex flex-col items-center justify-center h-full"},Ke={class:"flex flex-col items-center gap-2"},Qe={class:"flex items-center gap-2"},We={class:"flex items-start gap-4"},et={key:0,class:"mt-4 border-t pt-4 space-y-4"},tt={class:"grid gap-2"},at={class:"grid gap-2"},st={key:0,class:"space-y-4"},lt={class:"flex justify-end"},ot={class:"flex justify-end space-x-4"},it=`CREATE TABLE IF NOT EXISTS "{database}"."{table_name}"
(
    timestamp DateTime64(3) CODEC(DoubleDelta, LZ4),
    trace_id String CODEC(ZSTD(1)),
    span_id String CODEC(ZSTD(1)),
    trace_flags UInt32 CODEC(ZSTD(1)),
    severity_text LowCardinality(String) CODEC(ZSTD(1)),
    severity_number Int32 CODEC(ZSTD(1)),
    service_name LowCardinality(String) CODEC(ZSTD(1)),
    namespace LowCardinality(String) CODEC(ZSTD(1)),
    body String CODEC(ZSTD(1)),
    log_attributes Map(LowCardinality(String), String) CODEC(ZSTD(1)),

    INDEX idx_trace_id trace_id TYPE bloom_filter(0.001) GRANULARITY 1,
    INDEX idx_severity_text severity_text TYPE set(100) GRANULARITY 4,
    INDEX idx_log_attributes_keys mapKeys(log_attributes) TYPE bloom_filter(0.01) GRANULARITY 1,
    INDEX idx_log_attributes_values mapValues(log_attributes) TYPE bloom_filter(0.01) GRANULARITY 1,
    INDEX idx_body body TYPE tokenbf_v1(32768, 3, 0) GRANULARITY 1
)
ENGINE = MergeTree()
PARTITION BY toDate(timestamp)
ORDER BY (namespace, service_name, timestamp)
TTL toDateTime(timestamp) + INTERVAL {ttl_days} DAY
SETTINGS index_granularity = 8192, ttl_only_drop_parts = 1;`,rt=Z({__name:"AddSource",setup(I){const b=fe(),{toast:c}=de(),w=Te(),n=r("create"),p=S(()=>n.value==="create"),f=r(""),d=r(!1),E=r(""),D=r(""),v=r(""),_=r(""),$=r(""),N=r(90),R=r(!1),L=r(!1),k=r("timestamp"),C=r("severity_text"),O=r(!1),x=r(null),g=r(!1),Q=S(()=>{const u=v.value?String(v.value):"your_database",e=_.value?String(_.value):"your_table";return it.replace(/{database}/g,u).replace(/{table_name}/g,e).replace(/{ttl_days}/g,String(N.value))}),F=S(()=>!(!f.value||!v.value||!_.value||d.value&&(!E.value||!D.value))),W=u=>{d.value=u},ee=S(()=>O.value?"Validating...":n.value==="connect"?"Validate Connection & Columns":"Validate Connection"),te=S(()=>R.value?"Creating...":p.value?"Create Source":g.value?"Import Source":"Validate & Import"),H=async()=>{if(!O.value){if(!f.value||!v.value){c({title:"Error",description:"Please fill in host and database fields",variant:"destructive",duration:T.ERROR});return}O.value=!0,x.value=null,g.value=!1;try{const u={host:String(f.value),username:d.value?String(E.value):"",password:d.value?String(D.value):"",database:String(v.value),table_name:String(_.value)};n.value==="connect"&&_.value&&(u.timestamp_field=String(k.value),C.value&&(u.severity_field=String(C.value))),console.log("Validation payload:",u);const e=await fetch("/api/v1/sources/validate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(u)}),o=await e.json();e.ok?(x.value=o.data,o.data.success?(g.value=!0,c({title:"Success",description:o.data.message,variant:"default",duration:T.SUCCESS})):c({title:"Connection Error",description:o.data.message,variant:"destructive",duration:T.ERROR})):(console.error("Validation error:",o),x.value={success:!1,message:o.error||"Failed to validate connection"},c({title:"Error",description:o.error||"Failed to validate connection",variant:"destructive",duration:T.ERROR}))}catch(u){console.error("Validation exception:",u),x.value={success:!1,message:"An unexpected error occurred during validation"},c({title:"Error",description:"Failed to validate connection",variant:"destructive",duration:T.ERROR})}finally{O.value=!1}}},ae=async()=>{if(!R.value){if(!F.value){c({title:"Error",description:"Please fill in all required fields",variant:"destructive",duration:T.ERROR});return}if(!(!p.value&&!g.value&&(await H(),!g.value))){R.value=!0;try{await w.createSource({meta_is_auto_created:p.value,meta_ts_field:String(k.value),meta_severity_field:C.value?String(C.value):"",connection:{host:String(f.value),username:d.value?String(E.value):"",password:d.value?String(D.value):"",database:String(v.value),table_name:String(_.value)},description:String($.value),ttl_days:Number(N.value)})&&b.push({name:"Sources"})}finally{R.value=!1}}}};return(u,e)=>(V(),j(t(P),null,{default:l(()=>[a(t(Y),null,{default:l(()=>[a(t(_e),null,{default:l(()=>e[14]||(e[14]=[i("Add Source")])),_:1}),a(t(ge),null,{default:l(()=>e[15]||(e[15]=[i(" Connect to a ClickHouse database and configure log ingestion ")])),_:1})]),_:1}),a(t(G),null,{default:l(()=>[s("form",{onSubmit:ve(ae,["prevent"]),class:"space-y-6"},[s("div",Oe,[s("div",Ie,[e[19]||(e[19]=s("h3",{class:"text-lg font-medium"},"Basic Information",-1)),s("div",Ne,[a(t(m),{for:"table_name",class:"required"},{default:l(()=>e[16]||(e[16]=[i("Source Name")])),_:1}),a(t(y),{id:"table_name",modelValue:_.value,"onUpdate:modelValue":e[0]||(e[0]=o=>_.value=o),placeholder:"app_logs",required:""},null,8,["modelValue"]),e[17]||(e[17]=s("p",{class:"text-sm text-muted-foreground"}," This will be used as the table name in ClickHouse ",-1))]),s("div",ke,[a(t(m),{for:"description"},{default:l(()=>e[18]||(e[18]=[i("Description")])),_:1}),a(t(be),{id:"description",modelValue:$.value,"onUpdate:modelValue":e[1]||(e[1]=o=>$.value=o),placeholder:"Optional description",rows:"2"},null,8,["modelValue"])])]),s("div",he,[e[27]||(e[27]=s("h3",{class:"text-lg font-medium"},"Connection Details",-1)),s("div",Ae,[a(t(m),{for:"host",class:"required"},{default:l(()=>e[20]||(e[20]=[i("Host")])),_:1}),a(t(y),{id:"host",modelValue:f.value,"onUpdate:modelValue":e[2]||(e[2]=o=>f.value=o),placeholder:"localhost:9000",required:""},null,8,["modelValue"]),e[21]||(e[21]=s("p",{class:"text-sm text-muted-foreground"}," The ClickHouse server host and port ",-1))]),s("div",Ue,[a(t(m),{for:"database",class:"required"},{default:l(()=>e[22]||(e[22]=[i("Database")])),_:1}),a(t(y),{id:"database",modelValue:v.value,"onUpdate:modelValue":e[3]||(e[3]=o=>v.value=o),placeholder:"logs",required:""},null,8,["modelValue"])]),s("div",$e,[s("div",Le,[s("div",qe,[a(t(m),null,{default:l(()=>e[23]||(e[23]=[i("Enable Authentication")])),_:1}),e[24]||(e[24]=s("p",{class:"text-sm text-muted-foreground"}," Use username and password authentication ",-1))]),a(t(ye),{checked:d.value,"onUpdate:checked":W},null,8,["checked"])]),ue(s("div",Be,[s("div",Pe,[a(t(m),{for:"username",class:"required"},{default:l(()=>e[25]||(e[25]=[i("Username")])),_:1}),a(t(y),{id:"username",modelValue:E.value,"onUpdate:modelValue":e[4]||(e[4]=o=>E.value=o),placeholder:"default",required:d.value},null,8,["modelValue","required"])]),s("div",Ye,[a(t(m),{for:"password",class:"required"},{default:l(()=>e[26]||(e[26]=[i("Password")])),_:1}),a(t(y),{id:"password",modelValue:D.value,"onUpdate:modelValue":e[5]||(e[5]=o=>D.value=o),type:"password",required:d.value},null,8,["modelValue","required"])])],512),[[me,d.value]])])]),s("div",Ge,[e[41]||(e[41]=s("h3",{class:"text-lg font-medium"},"Table Configuration",-1)),a(t(Re),{"model-value":n.value,"onUpdate:modelValue":e[12]||(e[12]=o=>n.value=o),class:"grid grid-cols-[1fr_auto_1fr] items-start gap-4"},{default:l(()=>[a(t(P),{class:h([{"border-primary":n.value==="create"},"cursor-pointer"]),onClick:e[8]||(e[8]=o=>n.value="create")},{default:l(()=>[a(t(Y),null,{default:l(()=>[s("div",Ze,[a(t(X),{value:"create",id:"create"}),a(t(m),{for:"create",class:"cursor-pointer"},{default:l(()=>e[28]||(e[28]=[i("Create New Table")])),_:1})])]),_:1}),a(t(G),{class:"space-y-4"},{default:l(()=>[s("div",je,[a(t(Ve),{class:"h-5 w-5 mt-1 text-muted-foreground"}),e[29]||(e[29]=s("div",{class:"space-y-1"},[s("p",{class:"text-sm font-medium"},"Let LogChef create the table"),s("p",{class:"text-sm text-muted-foreground"},"Optimized schema with OTLP-compatible fields and efficient compression")],-1))]),s("div",Fe,[a(t(m),{for:"ttl_days"},{default:l(()=>e[30]||(e[30]=[i("TTL Days")])),_:1}),a(t(y),{id:"ttl_days",modelValue:N.value,"onUpdate:modelValue":e[6]||(e[6]=o=>N.value=o),type:"number",min:"1"},null,8,["modelValue"]),e[31]||(e[31]=s("p",{class:"text-sm text-muted-foreground"}," Number of days to keep logs before automatic deletion ",-1))]),a(t(xe),{open:L.value,"onUpdate:open":e[7]||(e[7]=o=>L.value=o),class:"space-y-2"},{default:l(()=>[a(t(Se),{asChild:""},{default:l(()=>[a(t(A),{variant:"outline",class:"w-full flex items-center justify-between"},{default:l(()=>[s("div",He,[a(t(De),{class:"h-4 w-4"}),e[32]||(e[32]=s("span",null,"View Auto-Generated Schema",-1))]),a(t(ce),{class:h(["h-4 w-4 transition-transform",{"rotate-180":L.value}])},null,8,["class"])]),_:1})]),_:1}),a(t(Ce),null,{default:l(()=>[s("div",Me,[e[33]||(e[33]=s("p",{class:"text-sm text-muted-foreground"},"This schema will be automatically created for you when you submit the form:",-1)),s("div",Xe,[s("pre",ze,U(Q.value),1)])])]),_:1})]),_:1},8,["open"])]),_:1})]),_:1},8,["class"]),s("div",Je,[s("div",Ke,[a(t(M),{orientation:"vertical",class:"h-8"}),e[34]||(e[34]=s("span",{class:"text-sm text-muted-foreground px-4"},"or",-1)),a(t(M),{orientation:"vertical",class:"h-8"})])]),a(t(P),{class:h([{"border-primary":n.value==="connect"},"cursor-pointer"]),onClick:e[11]||(e[11]=o=>n.value="connect")},{default:l(()=>[a(t(Y),null,{default:l(()=>[s("div",Qe,[a(t(X),{value:"connect",id:"connect"}),a(t(m),{for:"connect",class:"cursor-pointer"},{default:l(()=>e[35]||(e[35]=[i("Connect Existing Table")])),_:1})])]),_:1}),a(t(G),{class:"space-y-4"},{default:l(()=>[s("div",We,[a(t(pe),{class:"h-5 w-5 mt-1 text-muted-foreground"}),e[36]||(e[36]=s("div",{class:"space-y-1"},[s("p",{class:"text-sm font-medium"},"Use an existing table"),s("p",{class:"text-sm text-muted-foreground"},"Connect to an existing ClickHouse table where your logs are already being ingested. You'll need to specify which fields contain the timestamp and severity.")],-1))]),n.value==="connect"?(V(),q("div",et,[s("div",tt,[a(t(m),{for:"meta_ts_field",class:"required"},{default:l(()=>e[37]||(e[37]=[i("Timestamp Field Name")])),_:1}),a(t(y),{id:"meta_ts_field",modelValue:k.value,"onUpdate:modelValue":e[9]||(e[9]=o=>k.value=o),placeholder:"timestamp",required:""},null,8,["modelValue"]),e[38]||(e[38]=s("p",{class:"text-sm text-muted-foreground mt-1"}," Specify the field name that contains the timestamp in your table. Must be of type DateTime or DateTime64. ",-1))]),s("div",at,[a(t(m),{for:"meta_severity_field"},{default:l(()=>e[39]||(e[39]=[i("Severity Field Name (Optional)")])),_:1}),a(t(y),{id:"meta_severity_field",modelValue:C.value,"onUpdate:modelValue":e[10]||(e[10]=o=>C.value=o),placeholder:"severity_text"},null,8,["modelValue"]),e[40]||(e[40]=s("p",{class:"text-sm text-muted-foreground mt-1"}," Optionally specify the field name that contains the severity level in your table. Leave empty if not needed. ",-1))])])):B("",!0)]),_:1})]),_:1},8,["class"])]),_:1},8,["model-value"])]),p.value?B("",!0):(V(),q("div",st,[s("div",lt,[a(t(A),{type:"button",variant:"outline",onClick:H,disabled:O.value||g.value},{default:l(()=>[i(U(g.value?"Validated ✓":ee.value),1)]),_:1},8,["disabled"])]),x.value?(V(),q("div",{key:0,class:h(["p-3 rounded-md text-sm",x.value.success?"bg-green-50 text-green-800":"bg-red-50 text-red-800"])},U(x.value.message),3)):B("",!0)]))]),s("div",ot,[a(t(A),{type:"button",variant:"outline",onClick:e[13]||(e[13]=o=>t(b).push({name:"Sources"}))},{default:l(()=>e[42]||(e[42]=[i(" Cancel ")])),_:1}),a(t(A),{type:"submit",disabled:R.value||!F.value||!p.value&&!g.value},{default:l(()=>[i(U(te.value),1)]),_:1},8,["disabled"])])],32)]),_:1})]),_:1}))}}),Tt=we(rt,[["__scopeId","data-v-b0a3e0c3"]]);export{Tt as default};
