import{o,i as d,d as s,w as t,u as a,N as c,P as $,O as k,a as S,T as i,f as u,j as N,a0 as C,l as y,$ as L,W as T,t as V,a1 as I}from"./index-D9YGqZzS.js";import{_ as B,b as h,c as p,d as E,f as g,g as F,e as M,a as w}from"./index-DrMh2JDl.js";const j={class:"rounded-md border"},z={class:"flex flex-col"},Q={class:"text-xs text-muted-foreground"},q={class:"truncate"},A={__name:"LogTable",props:{data:{type:Array,required:!0}},setup(x){const f=l=>{switch(l.toLowerCase()){case"error":return"bg-red-500";case"warn":return"bg-yellow-500";case"info":return"bg-blue-500";case"debug":return"bg-gray-500";default:return"bg-gray-500"}},m=l=>new Date(l).toLocaleString();return(l,e)=>(o(),d("div",j,[s(a(M),null,{default:t(()=>[s(a(B),null,{default:t(()=>[s(a(h),null,{default:t(()=>[s(a(p),null,{default:t(()=>e[0]||(e[0]=[c("Timestamp")])),_:1}),s(a(p),null,{default:t(()=>e[1]||(e[1]=[c("Service")])),_:1}),s(a(p),null,{default:t(()=>e[2]||(e[2]=[c("Severity")])),_:1}),s(a(p),null,{default:t(()=>e[3]||(e[3]=[c("Message")])),_:1}),s(a(p),null,{default:t(()=>e[4]||(e[4]=[c("Trace ID")])),_:1})]),_:1})]),_:1}),s(a(E),null,{default:t(()=>[(o(!0),d($,null,k(x.data,n=>(o(),S(a(h),{key:n.id},{default:t(()=>[s(a(g),{class:"font-mono text-sm"},{default:t(()=>[c(i(m(n.timestamp)),1)]),_:2},1024),s(a(g),null,{default:t(()=>[u("div",z,[u("span",null,i(n.service_name),1),u("span",Q,i(n.namespace),1)])]),_:2},1024),s(a(g),null,{default:t(()=>[s(a(F),{class:N(f(n.severity_text))},{default:t(()=>[c(i(n.severity_text),1)]),_:2},1032,["class"])]),_:2},1024),s(a(g),{class:"max-w-xl"},{default:t(()=>[u("div",q,i(n.body),1)]),_:2},1024),s(a(g),{class:"font-mono text-sm"},{default:t(()=>[c(i(n.trace_id),1)]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]))}},O={class:"container py-8"},P={key:0,class:"mb-4 p-4 bg-red-50 text-red-600 rounded-md"},U={class:"mb-4"},W=["value"],G={key:1,class:"flex items-center justify-center h-64"},H={key:2,class:"p-4 mb-4 text-red-700 bg-red-100 rounded-md"},J={key:3,class:"text-center py-8 text-gray-500"},X=C({__name:"QueryView",setup(x){const f=y([]),m=y(!0),l=y(null),e=y(""),n=y([]);async function b(){if(!e.value){l.value="No source selected";return}try{m.value=!0;const r=await w.fetchLogs(e.value,{limit:50});f.value=r.logs||[],l.value=null}catch(r){l.value=r instanceof Error?r.message:"Failed to fetch logs",f.value=[]}finally{m.value=!1}}async function D(){try{const r=await w.fetchSources();r.data&&r.data.length>0&&(n.value=r.data,e.value=r.data[0].ID,await b())}catch(r){l.value=r instanceof Error?r.message:"Failed to fetch sources"}}return L(()=>{D()}),(r,_)=>(o(),d("div",O,[_[2]||(_[2]=u("div",{class:"mb-8"},[u("h1",{class:"text-2xl font-bold"},"Query Explorer"),u("p",{class:"text-sm text-muted-foreground mt-1"},"Search and analyze your logs across all sources.")],-1)),l.value?(o(),d("div",P,i(l.value),1)):T("",!0),u("div",U,[V(u("select",{"onUpdate:modelValue":_[0]||(_[0]=v=>e.value=v),class:"w-full p-2 border rounded-md",onChange:b},[(o(!0),d($,null,k(n.value,v=>(o(),d("option",{key:v.ID,value:v.ID},i(v.Name),9,W))),128))],544),[[I,e.value]])]),m.value?(o(),d("div",G,_[1]||(_[1]=[u("div",{class:"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"},null,-1)]))):l.value?(o(),d("div",H,i(l.value),1)):f.value.length===0?(o(),d("div",J," No logs found ")):(o(),S(A,{key:4,data:f.value},null,8,["data"]))]))}});export{X as default};
