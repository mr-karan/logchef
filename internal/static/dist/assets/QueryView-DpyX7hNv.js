import{_ as b,a as x,b as m,c as $,e as p,f as w,d as k}from"./index-DNECLr4U.js";import{o as n,i,d as s,w as e,u as t,N as o,P as h,O as C,a as g,T as u,f as d,j as N,a0 as S,l as y,$ as T,W as L}from"./index-CcukILwC.js";const V={class:"rounded-md border"},B={class:"flex flex-col"},j={class:"text-xs text-muted-foreground"},D={class:"truncate"},E={__name:"LogTable",props:{data:{type:Array,required:!0}},setup(v){const f=l=>{switch(l.toLowerCase()){case"error":return"bg-red-500";case"warn":return"bg-yellow-500";case"info":return"bg-blue-500";case"debug":return"bg-gray-500";default:return"bg-gray-500"}},_=l=>new Date(l).toLocaleString();return(l,r)=>(n(),i("div",V,[s(t(k),null,{default:e(()=>[s(t(b),null,{default:e(()=>[s(t(x),null,{default:e(()=>[s(t(m),null,{default:e(()=>r[0]||(r[0]=[o("Timestamp")])),_:1}),s(t(m),null,{default:e(()=>r[1]||(r[1]=[o("Service")])),_:1}),s(t(m),null,{default:e(()=>r[2]||(r[2]=[o("Severity")])),_:1}),s(t(m),null,{default:e(()=>r[3]||(r[3]=[o("Message")])),_:1}),s(t(m),null,{default:e(()=>r[4]||(r[4]=[o("Trace ID")])),_:1})]),_:1})]),_:1}),s(t($),null,{default:e(()=>[(n(!0),i(h,null,C(v.data,a=>(n(),g(t(x),{key:a.id},{default:e(()=>[s(t(p),{class:"font-mono text-sm"},{default:e(()=>[o(u(_(a.timestamp)),1)]),_:2},1024),s(t(p),null,{default:e(()=>[d("div",B,[d("span",null,u(a.service_name),1),d("span",j,u(a.namespace),1)])]),_:2},1024),s(t(p),null,{default:e(()=>[s(t(w),{class:N(f(a.severity_text))},{default:e(()=>[o(u(a.severity_text),1)]),_:2},1032,["class"])]),_:2},1024),s(t(p),{class:"max-w-xl"},{default:e(()=>[d("div",D,u(a.body),1)]),_:2},1024),s(t(p),{class:"font-mono text-sm"},{default:e(()=>[o(u(a.trace_id),1)]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})]))}},z={class:"container py-8"},F={key:0,class:"mb-4 p-4 bg-red-50 text-red-600 rounded-md"},M={key:1,class:"flex items-center justify-center h-64"},Q={key:2,class:"p-4 mb-4 text-red-700 bg-red-100 rounded-md"},q={key:3,class:"text-center py-8 text-gray-500"},O=S({__name:"QueryView",setup(v){const f=y([]),_=y(!0),l=y(null);async function r(){try{_.value=!0;const c=await(await fetch("/api/logs/test-source?limit=50")).json();f.value=c.data.logs}catch(a){l.value=a instanceof Error?a.message:"Failed to fetch logs"}finally{_.value=!1}}return T(()=>{r()}),(a,c)=>(n(),i("div",z,[c[1]||(c[1]=d("div",{class:"mb-8"},[d("h1",{class:"text-2xl font-bold"},"Query Explorer"),d("p",{class:"text-sm text-muted-foreground mt-1"},"Search and analyze your logs across all sources.")],-1)),l.value?(n(),i("div",F,u(l.value),1)):L("",!0),_.value?(n(),i("div",M,c[0]||(c[0]=[d("div",{class:"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"},null,-1)]))):l.value?(n(),i("div",Q,u(l.value),1)):f.value.length===0?(n(),i("div",q," No logs found ")):(n(),g(E,{key:4,data:f.value},null,8,["data"]))]))}});export{O as default};
